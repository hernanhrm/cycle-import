package main

import (
	"cycle-imports/di"
	"fmt"
	"runtime"
	"time"
)

func main() {
	fmt.Println("üöÄ Iniciando programa con DEPENDENCIA C√çCLICA...")
	fmt.Printf("CPUs disponibles: %d\n", runtime.NumCPU())
	fmt.Println()

	fmt.Println("‚ö†Ô∏è  ADVERTENCIA CR√çTICA:")
	fmt.Println("üíÄ Este programa tiene una dependencia c√≠clica en los constructores!")
	fmt.Println("üî• Causar√° Stack Overflow y consumo infinito de memoria!")
	fmt.Println("üõë Para detenerlo usa Ctrl+C inmediatamente!")
	fmt.Println()

	fmt.Println("üîÑ Explicaci√≥n del problema:")
	fmt.Println("   üì¶ InitCoursePriceUseCase() necesita InitPriceUseCase()")
	fmt.Println("   üì¶ InitPriceUseCase() necesita InitCoursePriceUseCase()")
	fmt.Println("   üîÅ = Recursi√≥n infinita en la inicializaci√≥n!")
	fmt.Println()

	// Countdown para que el usuario pueda cancelar
	for i := 5; i > 0; i-- {
		fmt.Printf("‚è∞ Iniciando en %d segundos... (Ctrl+C para cancelar)\n", i)
		time.Sleep(1 * time.Second)
	}

	fmt.Println()
	fmt.Println("üí• INICIANDO DEPENDENCIA C√çCLICA...")
	fmt.Println("üîÑ Intentando crear CoursePriceUseCase...")

	// ¬°AQU√ç OCURRE EL DESASTRE!
	// Esta l√≠nea causar√° recursi√≥n infinita:
	// main -> InitCoursePriceUseCase -> InitPriceUseCase -> InitCoursePriceUseCase -> InitPriceUseCase -> ...
	coursePriceService := di.InitCoursePriceUseCase()

	// Este c√≥digo nunca se ejecutar√° debido al stack overflow anterior
	fmt.Println("‚úÖ Si ves este mensaje, algo sali√≥ mal - el programa deber√≠a haber crasheado!")
	coursePriceService.ConsumeResources()

	// C√≥digo que nunca se alcanzar√°
	for {
		var m runtime.MemStats
		runtime.ReadMemStats(&m)
		fmt.Printf("üíæ Memoria: %d MB | Goroutines: %d\n",
			m.Alloc/1024/1024, runtime.NumGoroutine())
		time.Sleep(1 * time.Second)
	}
}

